plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()

// 加载打包key
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
       localProperties.load(new FileInputStream(keystorePropertiesFile))
}
android {
    namespace = "com.app.rtmp_publisher_example"
    // namespace = "com.fengjing.wchatone"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = "27.2.12479018"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    packaging {
        dex {
            useLegacyPackaging true
        }
        jniLibs {
            useLegacyPackaging true
        }
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.app.rtmp_publisher_example"
        // applicationId = "com.fengjing.wchatone" // 测试1
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = 24
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        multiDexEnabled = true
        ndk {
            abiFilters "arm64-v8a", "x86_64"
        }
        // 添加以下配置
        manifestPlaceholders += [
            'stepCounterPermission': 'android.permission.ACTIVITY_RECOGNITION'
        ]
    }
    signingConfigs {
       release {
           keyAlias  localProperties['keyAlias']
           keyPassword  localProperties['keyPassword']
           storeFile localProperties['storeFile'] ? file(localProperties['storeFile']) : null
           storePassword  localProperties['storePassword']
        //    minifyEnabled true
        //     shrinkResources false
        //    useProguard true
       }
   }
    buildTypes {
        debug {
            signingConfig = signingConfigs.debug
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.release
            // minifyEnabled = true
            // shrinkResources = true
            // proguardFiles = getDefaultProguardFile(
            //             'proguard-android-optimize.txt'),
            //             'proguard-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
}
